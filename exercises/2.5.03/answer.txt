2.5.3 Criticize the following implementation of a class intended to represent account
balances. Why is compareTo() a flawed implementation of the Comparable interface?
public class Balance implements Comparable<Balance>
{
    ...
    private double amount;
    public int compareTo(Balance that)
    {
        if (this.amount < that.amount - 0.005) return -1;
        if (this.amount > that.amount + 0.005) return +1;
        return 0;
    }
    ...
}
Describe a way to fix this problem.


From Java's documentation, the implementer must ensure that the compareTo
satisfies the following:
x.compareTo(y)==0 implies that sgn(x.compareTo(z)) == sgn(y.compareTo(z)), for all z.

Say x.amount == 1.008, y.amount == 1.004, and z.amount == 1.000.
x.compareTo(y) == 0.
y.compareTo(z) == 0.
x.compareTo(z) > 0.

This violates sgn(x.compareTo(z)) == sgn(y.compareTo(z)) since
x.compareTo(z) == 1 != y.compareTo(z) == 0.

A way to fix this is to round the doubles to 2 decimal places. In place of rounding,
one can also multiply by 1000, add 0.005 and truncate the double values in
before comparison. It is also possible to do the rounding at the constructor or
at every operation of class Balance that modifies amount.
